{"version":3,"sources":["BooksAPI.js","components/SearchInput.js","components/SearchBookShelfChanger.js","components/SearchBookItem.js","components/SearchList.js","components/CloseSearchBtn.js","components/SearchPage.js","components/BookShelfChanger.js","components/BookItem.js","components/BookList.js","components/CurrentReadList.js","components/FutureReadList.js","components/PrevReadList.js","components/Header.js","components/AddBookBtn.js","components/MainPage.js","components/NotFoundPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","SearchInput","state","searchTerm","evt","target","value","trimStart","_this","setState","props","searchSubmit","length","clearSearch","react_default","a","createElement","className","type","placeholder","this","onChange","React","Component","SearchBookShelfChanger","result","shelfValue","changeShelfSearch","disabled","SearchBookItem","style","width","height","backgroundImage","imageURL","components_SearchBookShelfChanger","title","author","SearchList","searchResult","map","components_SearchBookItem","key","authors","join","imageLinks","thumbnail","errorMessage","CloseSearchBtn","react_router_dom","to","SearchPage","error","undefined","_callee","regenerator_default","wrap","_context","prev","next","BooksAPI","sent","forEach","stop","components_CloseSearchBtn","components_SearchInput","components_SearchList","BookShelfChanger","changeShelf","BookItem","components_BookShelfChanger","BookList","currentlyReading","components_BookItem","futureReads","previousReads","CurrentReadList","_ref","currentBooks","components_BookList","FutureReadList","futureBooks","PrevReadList","previousBooks","Header","AddBookBtn","MainPage","filter","components_Header","components_CurrentReadList","components_FutureReadList","components_PrevReadList","components_AddBookBtn","NotFoundPage","BooksApp","newBooks","myBooks","_this2","react_router","path","exact","render","components_MainPage","components_SearchPage","component","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.42c15845.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react';\r\n\r\nclass SearchInput extends React.Component {\r\n  state = {\r\n    searchTerm: ''\r\n  };\r\n  search = (evt) => {\r\n    let searchTerm = evt.target.value.trimStart();\r\n    this.setState(() => ({\r\n      searchTerm\r\n    }))\r\n    if(searchTerm !== '') {\r\n      this.props.searchSubmit(searchTerm);\r\n      // Check whether search input field is empty.\r\n    } else if(searchTerm === '' || searchTerm.length <= 0) {\r\n      // Clear search results from searchResult state prop.\r\n      this.props.clearSearch(searchTerm);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"search-books-input-wrapper\">\r\n        <input type=\"text\" placeholder=\"Search by title or author\" value={this.state.searchTerm} onChange={this.search} />\r\n      </div>\r\n    );\r\n\r\n  }\r\n};\r\n\r\nexport default SearchInput;","import React from 'react';\r\n\r\nconst SearchBookShelfChanger = props => {\r\n  const onShelfChange = (evt) => {\r\n    const shelfValue = evt.target.value;\r\n    props.changeShelfSearch(props.result, shelfValue);\r\n  };\r\n  return (\r\n    <div className=\"book-shelf-changer\">\r\n      <select value={props.result.shelf} onChange={onShelfChange}>\r\n        <option value=\"move\" disabled>Move to...</option>\r\n        <option value=\"currentlyReading\">Currently Reading</option>\r\n        <option value=\"wantToRead\">Want to Read</option>\r\n        <option value=\"read\">Read</option>\r\n        <option value=\"none\">None</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBookShelfChanger;","import React from 'react';\r\n// IMPORT SEARCH BOOKSHELF CHANGER COMPONENT TO BE RENDERED IN SEARCHBOOKITEM COMPONENT.\r\nimport SearchBookShelfChanger from './SearchBookShelfChanger';\r\n\r\nconst SearchBookItem = props => {\r\n  return (\r\n    <li>\r\n      <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(\"${props.imageURL}\")` }}></div>\r\n            <SearchBookShelfChanger \r\n              books={props.books} result={props.result} \r\n              changeShelfSearch={props.changeShelfSearch}\r\n            />\r\n          </div>\r\n          <div className=\"book-title\">{props.title}</div>\r\n          <div className=\"book-authors\">{props.author}</div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default SearchBookItem;","import React from 'react';\r\n// IMPORT SEARCHBOOKITEM COMPONENT INTO SEARCHLIST.\r\nimport SearchBookItem from './SearchBookItem';\r\n\r\nconst SearchList = (props) => {\r\n  const renderResults = () => {\r\n    const book = props.searchResult.length > 0 ? \r\n    props.searchResult.map(result => \r\n      <SearchBookItem\r\n        key={result.id} \r\n        title={result.title}\r\n        author={result.authors && result.authors.join(', ')}\r\n        imageURL={result.imageLinks && result.imageLinks.thumbnail}\r\n        shelf={result.shelf}\r\n        books={props.books}\r\n        result={result}\r\n        changeShelfSearch={props.changeShelfSearch}\r\n      />) : \r\n      <p>{props.errorMessage}</p>; \r\n      return book;\r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      <ol className=\"books-grid\">\r\n        {renderResults()}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchList;\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst CloseSearchBtn = () => (\r\n  // Link back to main page (homepage).\r\n  <Link to=\"/\">\r\n    <button className=\"close-search\">\r\n      Close\r\n    </button>\r\n  </Link>\r\n);\r\n\r\nexport default CloseSearchBtn;\r\n","import React from 'react';\r\nimport * as BooksAPI from '../BooksAPI';\r\n// IMPORT SEARCH INPUT COMPONENT INTO SEARCH PAGE\r\nimport SearchInput from './SearchInput';\r\n// IMPORT SEARCH LIST COMPONENT INTO SEARCH PAGE.\r\nimport SearchList from './SearchList';\r\n// IMPORT CLOSE SEARCH BTN COMPONENT INTO SEARCH PAGE.\r\nimport CloseSearchBtn from './CloseSearchBtn';\r\n\r\nclass SearchPage extends React.Component {\r\n  state = {\r\n    searchResult: [],\r\n    error: undefined\r\n  }\r\n  // Function for making Async search request to BooksAPI.\r\n  searchSubmit = async(query) => {\r\n    const searchResult = await BooksAPI.search(query);\r\n    // Check whether search result array exists.\r\n    if(searchResult.error !== 'empty query') {\r\n        // Loop through search results and compare each result's id property to the each book in books array id property. \r\n        searchResult.forEach(result => result.shelf = 'none');\r\n        searchResult.forEach(result => {\r\n          this.props.books.map(book => {\r\n            /* If result id property is = book's id property then set the result shelf property value equal to the that's \r\n                matching book's shelf property */\r\n            if(result.id === book.id) {\r\n              result.shelf = book.shelf;\r\n            }\r\n            return book;\r\n          })\r\n          return result;\r\n        })\r\n        // Set searchResult state to value returned from call to BooksAPI.search async function.\r\n        this.setState(() => ({\r\n          searchResult\r\n        }));\r\n        // If searhc results comes back empty then set error state to string value and reset searchResult state property to an empty array.\r\n    } else {\r\n      this.setState(() => ({\r\n        error: 'No results please try another search term',\r\n        searchResult: []\r\n      }));\r\n    }\r\n  };\r\n\r\n\r\n  // Function to clear searchResults state prop when serach input field is empty.\r\n  clearSearch = (query) => {\r\n    this.setState(() => ({\r\n      searchResult: [],\r\n      error: undefined\r\n    }))\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <CloseSearchBtn />\r\n          <SearchInput \r\n            searchSubmit={this.searchSubmit} \r\n            clearSearch={this.clearSearch}\r\n          />\r\n        </div>\r\n        <SearchList \r\n          className=\"search-books-results\" \r\n          searchResult={this.state.searchResult}\r\n          books={this.props.books}\r\n          changeShelfSearch={this.props.changeShelfSearch}\r\n          errorMessage={this.state.error}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SearchPage;","import React from 'react';\r\n\r\nconst BookShelfChanger = props => {\r\n  // Function to execute upon select list change.\r\n  const onShelfChange = (evt) => {\r\n    // return currently selected value from select list element.\r\n    const shelfValue = evt.target.value;\r\n    // Call changeShelf function located in BookApp parent component.\r\n    props.changeShelf(props.book, shelfValue);\r\n  };\r\n  return (\r\n    <div className=\"book-shelf-changer\">\r\n      <select value={props.shelf} onChange={onShelfChange}>\r\n        <option value=\"move\" disabled>Move to...</option>\r\n        <option value=\"currentlyReading\">Currently Reading</option>\r\n        <option value=\"wantToRead\">Want to Read</option>\r\n        <option value=\"read\">Read</option>\r\n        <option value=\"none\">None</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookShelfChanger;","import React from 'react';\r\n// IMPORT BOOKSHELF CHANGER COMPONENT TO BE RENDERED IN BOOKitem COMPONENT.\r\nimport BookShelfChanger from './BookShelfChanger';\r\n\r\nconst BookItem = props => {\r\n  return (\r\n    <li>\r\n      <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(\"${props.imageURL}\")` }}></div>\r\n            <BookShelfChanger \r\n              shelf={props.shelf} \r\n              changeShelf={props.changeShelf} \r\n              book={props.book}\r\n            />\r\n          </div>\r\n          <div className=\"book-title\">{props.title}</div>\r\n          <div className=\"book-authors\">{props.author}</div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default BookItem;","import React from 'react';\r\nimport BookItem from './BookItem';\r\n\r\nconst BookList = props => {\r\n  let books;\r\n  // Render currently reading bookshelf books.\r\n  if(props.currentlyReading !== undefined) {\r\n    books = props.currentlyReading.map(book => \r\n    <BookItem \r\n      key={book.id}\r\n      title={book.title}\r\n      author={book.authors && book.authors}\r\n      imageURL={book.imageLinks && book.imageLinks.thumbnail}\r\n      shelf={book.shelf}\r\n      changeShelf={props.changeShelf}\r\n      book={book}\r\n    />);\r\n  // Render want to read bookshelf books.\r\n  } else if(props.futureReads !== undefined) {\r\n    books = props.futureReads.map(book => \r\n      <BookItem\r\n        key={book.id}\r\n        title={book.title}\r\n        author={book.authors && book.authors}\r\n        imageURL={book.imageLinks && book.imageLinks.thumbnail}\r\n        shelf={book.shelf}\r\n        changeShelf={props.changeShelf}\r\n        book={book}\r\n      />)\r\n  // Render previously read bookshelf books.\r\n  } else if(props.previousReads !== undefined) {\r\n    books = props.previousReads.map(book => \r\n      <BookItem\r\n        key={book.id}\r\n        title={book.title}\r\n        author={book.authors && book.authors}\r\n        imageURL={book.imageLinks && book.imageLinks.thumbnail}\r\n        shelf={book.shelf}\r\n        changeShelf={props.changeShelf}\r\n        book={book}\r\n      />)\r\n  }\r\n  return (\r\n    <div className=\"bookshelf-books\">\r\n      <ol className=\"books-grid\">\r\n        {books}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookList;","import React from 'react';\r\nimport BookList from './BookList';\r\n\r\nconst CurrentReadList = ({currentBooks, changeShelf, title}) => {\r\n  return (\r\n      <div>\r\n        <div className=\"bookshelf\">\r\n  <h2 className=\"bookshelf-title\">{title}</h2>\r\n          <BookList currentlyReading={currentBooks} changeShelf={changeShelf} />\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default CurrentReadList;\r\n","import React from 'react';\r\nimport BookList from './BookList';\r\n\r\nconst FutureReadList = ({futureBooks, changeShelf, title}) => {\r\n  return (\r\n      <div>\r\n        <div className=\"bookshelf\">\r\n          <h2 className=\"bookshelf-title\">{title}</h2>\r\n          <BookList futureReads={futureBooks} changeShelf={changeShelf} />\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default FutureReadList;","import React from 'react';\r\n// IMPORT BOOK LIST COMPONENT INTO PREVIOUS READ BOOK LIST.\r\nimport BookList from './BookList';\r\n\r\nconst PrevReadList = ({previousBooks, changeShelf, title}) => {\r\n  return (\r\n      <div>\r\n        <div className=\"bookshelf\">\r\n          <h2 className=\"bookshelf-title\">{title}</h2>\r\n          <BookList previousReads={previousBooks} changeShelf={changeShelf} />\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default PrevReadList;","import React from 'react';\r\n\r\nconst Header = () => (\r\n  <div className=\"list-books-title\">\r\n    <h1>MyReads</h1>\r\n  </div>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst AddBookBtn = () => {\r\n  return (\r\n    <div className=\"open-search\">\r\n      {/* Link to search page route */}\r\n      <Link to=\"/search\">\r\n        <button>Add a book</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBookBtn;\r\n","import React from 'react';\r\nimport CurrentReadList from './CurrentReadList';\r\nimport FutureReadList from './FutureReadList';\r\nimport PrevReadList from './PrevReadList';\r\nimport Header from './Header';\r\nimport AddBookBtn from './AddBookBtn';\r\n\r\nconst MainPage = props => {\r\n    // Filter books list down to only books that have shelf prop value of 'currentlyReading'.\r\n    const currentBooks = props.books.filter(book => book.shelf === 'currentlyReading');\r\n    // Filter books list down to only books that have shelf prop value of 'wantToRead'.\r\n    const futureBooks = props.books.filter(book => book.shelf === 'wantToRead');\r\n    // Filter books list down to only books that have shelf prop value of 'read'.\r\n    const previousBooks = props.books.filter(book => book.shelf === 'read');\r\n    return (\r\n      <div className=\"list-books\">\r\n        <Header />\r\n        <div className=\"list-books-content\">\r\n          <CurrentReadList currentBooks={currentBooks} changeShelf={props.changeShelf} title=\"Currently Reading\" />\r\n          <FutureReadList futureBooks={futureBooks} changeShelf={props.changeShelf} title=\"Want to Read\" />\r\n          <PrevReadList previousBooks={previousBooks} changeShelf={props.changeShelf} title=\"Read\" />\r\n        </div>\r\n        <AddBookBtn />\r\n      </div>\r\n    );\r\n}; \r\n\r\nexport default MainPage;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFoundPage = () => (\r\n  <div>\r\n    <h1>404</h1>\r\n    <p>Page not Found<Link to=\"/\"> Go Home</Link></p>\r\n  </div>\r\n);\r\n\r\nexport default NotFoundPage;","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport { Switch, Route } from 'react-router-dom'; \r\nimport './App.css'\r\nimport SearchPage from './components/SearchPage'\r\nimport MainPage from './components/MainPage';\r\nimport NotFoundPage from './components/NotFoundPage';\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    books: []\r\n  }\r\n  // Function for moving book from one shelf to another.\r\n  changeShelf = async(book, shelf) => {\r\n    // Update selected book's shelf property to value selected from select list ('currentlyReading', 'wantToRead', 'read' or 'none').\r\n    await BooksAPI.update(book, shelf);\r\n    // Return array of books after shelf property has been updated on selected books.\r\n    const newBooks = await BooksAPI.getAll();\r\n    // Update component state books property to value of newBooks.\r\n    this.setState(() => ({\r\n      books: newBooks\r\n    }));\r\n  };\r\n  async componentWillMount() {\r\n    const myBooks = await BooksAPI.getAll();\r\n    this.setState(() => ({\r\n      books: myBooks\r\n    }));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          {/*Main page route */}\r\n          <Route path=\"/\" exact render={() => <MainPage \r\n            books={this.state.books}\r\n            changeShelf={this.changeShelf}\r\n          />} \r\n          />\r\n          {/*Search page route */}\r\n          <Route path=\"/search\" exact render={() => <SearchPage\r\n            books={this.state.books}\r\n            changeShelfSearch={this.changeShelf}\r\n          />} \r\n          />\r\n          {/*404 page not found route*/}\r\n          <Route component={NotFoundPage} />\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, \r\n    document.getElementById('root'))\r\n"],"sourceRoot":""}